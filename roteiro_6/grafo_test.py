import unittest
from meu_grafo_matriz_adj_dir import *
from bibgrafo.grafo_exceptions import *

class TestGrafo(unittest.TestCase):

    def setUp(self):
        
        self.u = MeuGrafo(["0", "1", "2", "3"])
        self.u.adicionaAresta("A", "0", "1")
        self.u.adicionaAresta("B", "1", "2")
        self.u.adicionaAresta("C", "2", "3")

        # Grafos direcionados
        self.grafo_dir_1 = MeuGrafo(V=['A', 'B', 'C', 'D'])
        self.grafo_dir_1.adicionaAresta('a1', 'A', 'B')
        self.grafo_dir_1.adicionaAresta('a2', 'A', 'C')
        self.grafo_dir_1.adicionaAresta('a3', 'B', 'C')
        self.grafo_dir_1.adicionaAresta('a4', 'C', 'A')
        self.grafo_dir_1.adicionaAresta('a5', 'C', 'D')

        self.grafo_dir_2 = MeuGrafo(V=[chr(i) for i in range(65, 70)])
        self.grafo_dir_2.adicionaAresta('a1', 'A', 'B')
        self.grafo_dir_2.adicionaAresta('a2', 'B', 'C')
        self.grafo_dir_2.adicionaAresta('a3', 'C', 'A')
        self.grafo_dir_2.adicionaAresta('a4', 'B', 'D')
        self.grafo_dir_2.adicionaAresta('a5', 'E', 'D')
        self.grafo_dir_2.adicionaAresta('a6', 'E', 'E')

        self.grafo_dir_3 = MeuGrafo(['2', '9', '10', '11', '8', '7', '5', '3'])
        self.grafo_dir_3.adicionaAresta('a', '7', '11')
        self.grafo_dir_3.adicionaAresta('b', '7', '8')
        self.grafo_dir_3.adicionaAresta('c', '5', '11')
        self.grafo_dir_3.adicionaAresta('d', '3', '8')
        self.grafo_dir_3.adicionaAresta('e', '3', '10')
        self.grafo_dir_3.adicionaAresta('f', '11', '10')
        self.grafo_dir_3.adicionaAresta('g', '8', '9')
        self.grafo_dir_3.adicionaAresta('h', '11', '9')
        self.grafo_dir_3.adicionaAresta('i', '11', '2')

        self.grafo_dir_4 = MeuGrafo(['x' + str(i) for i in range(1, 11)])
        self.grafo_dir_4.adicionaAresta('e1', 'x1', 'x2')
        self.grafo_dir_4.adicionaAresta('e2', 'x1', 'x3')
        self.grafo_dir_4.adicionaAresta('e3', 'x1', 'x6')
        self.grafo_dir_4.adicionaAresta('e4', 'x2', 'x5')
        self.grafo_dir_4.adicionaAresta('e5', 'x3', 'x5')
        self.grafo_dir_4.adicionaAresta('e6', 'x3', 'x4')
        self.grafo_dir_4.adicionaAresta('e7', 'x4', 'x5')
        self.grafo_dir_4.adicionaAresta('e8', 'x6', 'x7')
        self.grafo_dir_4.adicionaAresta('e9', 'x6', 'x8')
        self.grafo_dir_4.adicionaAresta('e10', 'x5', 'x9')
        self.grafo_dir_4.adicionaAresta('e11', 'x7', 'x9')
        self.grafo_dir_4.adicionaAresta('e12', 'x8', 'x9')
        self.grafo_dir_4.adicionaAresta('e13', 'x9', 'x10')

        self.grafo_dir_5 = MeuGrafo([str(i) for i in range(0, 6)])
        self.grafo_dir_5.adicionaAresta('a', '0', '1')
        self.grafo_dir_5.adicionaAresta('b', '1', '2')
        self.grafo_dir_5.adicionaAresta('c', '0', '2')
        self.grafo_dir_5.adicionaAresta('d', '2', '4')
        self.grafo_dir_5.adicionaAresta('e', '4', '5')
        self.grafo_dir_5.adicionaAresta('f', '5', '3')

        self.grafo_dir_6 = MeuGrafo([str(i) for i in range(1, 8)])
        self.grafo_dir_6.adicionaAresta('a', '4', '6')
        self.grafo_dir_6.adicionaAresta('b', '2', '6')
        self.grafo_dir_6.adicionaAresta('c', '2', '4')
        self.grafo_dir_6.adicionaAresta('d', '4', '7')
        self.grafo_dir_6.adicionaAresta('e', '5', '7')
        self.grafo_dir_6.adicionaAresta('f', '4', '5')
        self.grafo_dir_6.adicionaAresta('g', '1', '5')
        self.grafo_dir_6.adicionaAresta('h', '1', '4')
        self.grafo_dir_6.adicionaAresta('i', '1', '2')
        self.grafo_dir_6.adicionaAresta('j', '1', '3')
        self.grafo_dir_6.adicionaAresta('k', '3', '4')
        self.grafo_dir_6.adicionaAresta('l', '2', '3')

        self.grafo_dir_7 = MeuGrafo([str(i) for i in range(0, 6)])
        self.grafo_dir_7.adicionaAresta('a', '0', '2')
        self.grafo_dir_7.adicionaAresta('b', '1', '2')
        self.grafo_dir_7.adicionaAresta('c', '2', '4')
        self.grafo_dir_7.adicionaAresta('d', '1', '4')
        self.grafo_dir_7.adicionaAresta('e', '5', '1')
        self.grafo_dir_7.adicionaAresta('f', '4', '5')
        self.grafo_dir_7.adicionaAresta('g', '0', '4')
        self.grafo_dir_7.adicionaAresta('h', '0', '3')
        self.grafo_dir_7.adicionaAresta('i', '3', '4')
        self.grafo_dir_7.adicionaAresta('j', '3', '5')

        self.grafo_dir_8 = MeuGrafo([str(i) for i in range(0, 8)])
        self.grafo_dir_8.adicionaAresta('a', '0', '1')
        self.grafo_dir_8.adicionaAresta('b', '2', '0')
        self.grafo_dir_8.adicionaAresta('c', '2', '3')
        self.grafo_dir_8.adicionaAresta('d', '2', '5')
        self.grafo_dir_8.adicionaAresta('e', '5', '7')
        self.grafo_dir_8.adicionaAresta('f', '3', '6')
        self.grafo_dir_8.adicionaAresta('g', '6', '3')
        self.grafo_dir_8.adicionaAresta('h', '4', '6')
        self.grafo_dir_8.adicionaAresta('i', '3', '4')
        self.grafo_dir_8.adicionaAresta('j', '1', '2')

        self.grafo_dir_9 = MeuGrafo(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L'])
        self.grafo_dir_9.adicionaAresta('1', 'A', 'B')
        self.grafo_dir_9.adicionaAresta('2', 'B', 'H')
        self.grafo_dir_9.adicionaAresta('3', 'A', 'H')
        self.grafo_dir_9.adicionaAresta('4', 'A', 'C')
        self.grafo_dir_9.adicionaAresta('5', 'C', 'G')
        self.grafo_dir_9.adicionaAresta('6', 'C', 'H')
        self.grafo_dir_9.adicionaAresta('7', 'A', 'E')
        self.grafo_dir_9.adicionaAresta('8', 'E', 'G')
        self.grafo_dir_9.adicionaAresta('9', 'K', 'G')
        self.grafo_dir_9.adicionaAresta('10', 'K', 'F')
        self.grafo_dir_9.adicionaAresta('11', 'D', 'E')
        self.grafo_dir_9.adicionaAresta('12', 'D', 'F')
        self.grafo_dir_9.adicionaAresta('13', 'I', 'K')
        self.grafo_dir_9.adicionaAresta('14', 'F', 'I')
        self.grafo_dir_9.adicionaAresta('15', 'I', 'L')
        self.grafo_dir_9.adicionaAresta('16', 'L', 'L')

    def test_warshall(self):
        self.assertEqual(self.grafo_dir_1.warshall(), [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_2.warshall(), [[1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 1]])
        self.assertEqual(self.grafo_dir_3.warshall(), [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_4.warshall(), [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_5.warshall(), [[0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0]])
        self.assertEqual(self.grafo_dir_6.warshall(), [[0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_7.warshall(), [[0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1]])
        self.assertEqual(self.grafo_dir_8.warshall(), [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_9.warshall(), [[0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
        self.assertEqual(self.u.warshall(), [[0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 0]])
