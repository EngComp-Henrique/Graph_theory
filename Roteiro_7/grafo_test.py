import unittest
from meu_grafo_matriz_adj_dir import *
from bibgrafo.grafo_exceptions import *

class TestGrafo(unittest.TestCase):

    def setUp(self):
        self.u = MeuGrafo(["0", "1", "2", "3"])
        self.u.adicionaAresta("A", "0", "1")
        self.u.adicionaAresta("B", "1", "2")
        self.u.adicionaAresta("C", "2", "3")

        # Grafos direcionados
        self.grafo_dir_1 = MeuGrafo(V=['A', 'B', 'C', 'D'])
        self.grafo_dir_1.adicionaAresta('a1', 'A', 'B')
        self.grafo_dir_1.adicionaAresta('a2', 'A', 'C')
        self.grafo_dir_1.adicionaAresta('a3', 'B', 'C')
        self.grafo_dir_1.adicionaAresta('a4', 'C', 'A')
        self.grafo_dir_1.adicionaAresta('a5', 'C', 'D')

        self.grafo_dir_2 = MeuGrafo(V=[chr(i) for i in range(65, 70)])
        self.grafo_dir_2.adicionaAresta('a1', 'A', 'B')
        self.grafo_dir_2.adicionaAresta('a2', 'B', 'C')
        self.grafo_dir_2.adicionaAresta('a3', 'C', 'A')
        self.grafo_dir_2.adicionaAresta('a4', 'B', 'D')
        self.grafo_dir_2.adicionaAresta('a5', 'E', 'D')
        self.grafo_dir_2.adicionaAresta('a6', 'E', 'E')

        self.grafo_dir_3 = MeuGrafo(['2', '9', '10', '11', '8', '7', '5', '3'])
        self.grafo_dir_3.adicionaAresta('a', '7', '11')
        self.grafo_dir_3.adicionaAresta('b', '7', '8')
        self.grafo_dir_3.adicionaAresta('c', '5', '11')
        self.grafo_dir_3.adicionaAresta('d', '3', '8')
        self.grafo_dir_3.adicionaAresta('e', '3', '10')
        self.grafo_dir_3.adicionaAresta('f', '11', '10')
        self.grafo_dir_3.adicionaAresta('g', '8', '9')
        self.grafo_dir_3.adicionaAresta('h', '11', '9')
        self.grafo_dir_3.adicionaAresta('i', '11', '2')

        self.grafo_dir_4 = MeuGrafo(['x' + str(i) for i in range(1, 11)])
        self.grafo_dir_4.adicionaAresta('e1', 'x1', 'x2')
        self.grafo_dir_4.adicionaAresta('e2', 'x1', 'x3')
        self.grafo_dir_4.adicionaAresta('e3', 'x1', 'x6')
        self.grafo_dir_4.adicionaAresta('e4', 'x2', 'x5')
        self.grafo_dir_4.adicionaAresta('e5', 'x3', 'x5')
        self.grafo_dir_4.adicionaAresta('e6', 'x3', 'x4')
        self.grafo_dir_4.adicionaAresta('e7', 'x4', 'x5')
        self.grafo_dir_4.adicionaAresta('e8', 'x6', 'x7')
        self.grafo_dir_4.adicionaAresta('e9', 'x6', 'x8')
        self.grafo_dir_4.adicionaAresta('e10', 'x5', 'x9')
        self.grafo_dir_4.adicionaAresta('e11', 'x7', 'x9')
        self.grafo_dir_4.adicionaAresta('e12', 'x8', 'x9')
        self.grafo_dir_4.adicionaAresta('e13', 'x9', 'x10')

        self.grafo_dir_5 = MeuGrafo([str(i) for i in range(0, 6)])
        self.grafo_dir_5.adicionaAresta('a', '0', '1')
        self.grafo_dir_5.adicionaAresta('b', '1', '2')
        self.grafo_dir_5.adicionaAresta('c', '0', '2')
        self.grafo_dir_5.adicionaAresta('d', '2', '4')
        self.grafo_dir_5.adicionaAresta('e', '4', '5')
        self.grafo_dir_5.adicionaAresta('f', '5', '3')

        self.grafo_dir_6 = MeuGrafo([str(i) for i in range(1, 8)])
        self.grafo_dir_6.adicionaAresta('a', '4', '6')
        self.grafo_dir_6.adicionaAresta('b', '2', '6')
        self.grafo_dir_6.adicionaAresta('c', '2', '4')
        self.grafo_dir_6.adicionaAresta('d', '4', '7')
        self.grafo_dir_6.adicionaAresta('e', '5', '7')
        self.grafo_dir_6.adicionaAresta('f', '4', '5')
        self.grafo_dir_6.adicionaAresta('g', '1', '5')
        self.grafo_dir_6.adicionaAresta('h', '1', '4')
        self.grafo_dir_6.adicionaAresta('i', '1', '2')
        self.grafo_dir_6.adicionaAresta('j', '1', '3')
        self.grafo_dir_6.adicionaAresta('k', '3', '4')
        self.grafo_dir_6.adicionaAresta('l', '2', '3')

        self.grafo_dir_7 = MeuGrafo([str(i) for i in range(0, 6)])
        self.grafo_dir_7.adicionaAresta('a', '0', '2')
        self.grafo_dir_7.adicionaAresta('b', '1', '2')
        self.grafo_dir_7.adicionaAresta('c', '2', '4')
        self.grafo_dir_7.adicionaAresta('d', '1', '4')
        self.grafo_dir_7.adicionaAresta('e', '5', '1')
        self.grafo_dir_7.adicionaAresta('f', '4', '5')
        self.grafo_dir_7.adicionaAresta('g', '0', '4')
        self.grafo_dir_7.adicionaAresta('h', '0', '3')
        self.grafo_dir_7.adicionaAresta('i', '3', '4')
        self.grafo_dir_7.adicionaAresta('j', '3', '5')

        self.grafo_dir_8 = MeuGrafo([str(i) for i in range(0, 8)])
        self.grafo_dir_8.adicionaAresta('a', '0', '1')
        self.grafo_dir_8.adicionaAresta('b', '2', '0')
        self.grafo_dir_8.adicionaAresta('c', '2', '3')
        self.grafo_dir_8.adicionaAresta('d', '2', '5')
        self.grafo_dir_8.adicionaAresta('e', '5', '7')
        self.grafo_dir_8.adicionaAresta('f', '3', '6')
        self.grafo_dir_8.adicionaAresta('g', '6', '3')
        self.grafo_dir_8.adicionaAresta('h', '4', '6')
        self.grafo_dir_8.adicionaAresta('i', '3', '4')
        self.grafo_dir_8.adicionaAresta('j', '1', '2')

        self.grafo_dir_9 = MeuGrafo(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L'])
        self.grafo_dir_9.adicionaAresta('1', 'A', 'B')
        self.grafo_dir_9.adicionaAresta('2', 'B', 'H')
        self.grafo_dir_9.adicionaAresta('3', 'A', 'H')
        self.grafo_dir_9.adicionaAresta('4', 'A', 'C')
        self.grafo_dir_9.adicionaAresta('5', 'C', 'G')
        self.grafo_dir_9.adicionaAresta('6', 'C', 'H')
        self.grafo_dir_9.adicionaAresta('7', 'A', 'E')
        self.grafo_dir_9.adicionaAresta('8', 'E', 'G')
        self.grafo_dir_9.adicionaAresta('9', 'K', 'G')
        self.grafo_dir_9.adicionaAresta('10', 'K', 'F')
        self.grafo_dir_9.adicionaAresta('11', 'D', 'E')
        self.grafo_dir_9.adicionaAresta('12', 'D', 'F')
        self.grafo_dir_9.adicionaAresta('13', 'I', 'K')
        self.grafo_dir_9.adicionaAresta('14', 'F', 'I')
        self.grafo_dir_9.adicionaAresta('15', 'I', 'L')
        self.grafo_dir_9.adicionaAresta('16', 'L', 'L')

        self.vertices = [chr(i) for i in range(65, 91)]
        self.vertices.append("AA")
        self.vertices.append("AB")
        self.vertices.append("AC")
        self.vertices.append("AD")
        self.vertices.append("AE")
        self.vertices.append("AF")
        self.vertices.append("AG")
        self.grafo_dir_10 = MeuGrafo(self.vertices)
        self.grafo_dir_10.adicionaAresta('1', 'A', 'B', 3)
        self.grafo_dir_10.adicionaAresta('2', 'A', 'H', 1)
        self.grafo_dir_10.adicionaAresta('3', 'A', 'C', 1)
        self.grafo_dir_10.adicionaAresta('4', 'B', 'D', 4)
        self.grafo_dir_10.adicionaAresta('5', 'B', 'E', 5)
        self.grafo_dir_10.adicionaAresta('6', 'H', 'F', 1)
        self.grafo_dir_10.adicionaAresta('7', 'C', 'G', 2)
        self.grafo_dir_10.adicionaAresta('8', 'C', 'H', 3)
        self.grafo_dir_10.adicionaAresta('9', 'I', 'B', 1)
        self.grafo_dir_10.adicionaAresta('10', 'I', 'J', 2)
        self.grafo_dir_10.adicionaAresta('11', 'G', 'L', 3)
        self.grafo_dir_10.adicionaAresta('12', 'G', 'F', 3)
        self.grafo_dir_10.adicionaAresta('13', 'F', 'J', 2)
        self.grafo_dir_10.adicionaAresta('14', 'F', 'K', 1)
        self.grafo_dir_10.adicionaAresta('15', 'E', 'M', 4)
        self.grafo_dir_10.adicionaAresta('16', 'J', 'E', 2)
        self.grafo_dir_10.adicionaAresta('17', 'J', 'N', 5)
        self.grafo_dir_10.adicionaAresta('18', 'K', 'O', 3)
        self.grafo_dir_10.adicionaAresta('19', 'L', 'P', 1)
        self.grafo_dir_10.adicionaAresta('20', 'M', 'Q', 3)
        self.grafo_dir_10.adicionaAresta('21', 'M', 'S', 4)
        self.grafo_dir_10.adicionaAresta('22', 'N', 'R', 7)
        self.grafo_dir_10.adicionaAresta('23', 'O', 'S', 1)
        self.grafo_dir_10.adicionaAresta('24', 'P', 'R', 5)
        self.grafo_dir_10.adicionaAresta('25', 'N', 'T', 1)
        self.grafo_dir_10.adicionaAresta('26', 'N', 'S', 3)
        self.grafo_dir_10.adicionaAresta('27', 'U', 'S', 1)
        self.grafo_dir_10.adicionaAresta('28', 'S', 'W', 7)
        self.grafo_dir_10.adicionaAresta('29', 'S', 'T', 1)
        self.grafo_dir_10.adicionaAresta('30', 'T', 'Q', 5)
        self.grafo_dir_10.adicionaAresta('31', 'T', 'X', 2)
        self.grafo_dir_10.adicionaAresta('32', 'Q', 'Y', 1)
        self.grafo_dir_10.adicionaAresta('33', 'Y', 'Z', 7)
        self.grafo_dir_10.adicionaAresta('34', 'Y', 'AA', 7)
        self.grafo_dir_10.adicionaAresta('35', 'X', 'AA', 1)
        self.grafo_dir_10.adicionaAresta('36', 'X', 'AB', 1)
        self.grafo_dir_10.adicionaAresta('37', 'X', 'U', 1)
        self.grafo_dir_10.adicionaAresta('38', 'AC', 'U', 2)
        self.grafo_dir_10.adicionaAresta('39', 'W', 'AC', 7)
        self.grafo_dir_10.adicionaAresta('40', 'W', 'AD', 3)
        self.grafo_dir_10.adicionaAresta('41', 'Z', 'AF', 2)
        self.grafo_dir_10.adicionaAresta('42', 'AF', 'AE', 1)
        self.grafo_dir_10.adicionaAresta('43', 'AC', 'AE', 5)
        self.grafo_dir_10.adicionaAresta('44', 'AE', 'AG', 3)
        self.grafo_dir_10.adicionaAresta('45', 'AE', 'V', 1)
        self.grafo_dir_10.adicionaAresta('46', 'D', 'I', 5)
        self.grafo_dir_10.adicionaAresta('47', 'F', 'I', 4)
        self.grafo_dir_10.adicionaAresta('48', 'R', 'S', 10)

        self.caminho_1 = ['A', '2', 'H', '6', 'F', '14', 'K', '18', 'O', '23', 'S', '29', 'T', '30', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '45', 'V']
        self.caminho_2 = ['A', '2', 'H', '6', 'F', '14', 'K', '18', 'O', '23', 'S', '28', 'W', '39', 'AC', '43', 'AE', '44', 'AG']
        self.caminho_3 = ['A', '2', 'H', '6', 'F', '14', 'K', '18', 'O', '23', 'S', '29', 'T', '30', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '44', 'AG']
        self.caminho_4 = ['A', '2', 'H', '6', 'F', '13', 'J', '16', 'E', '15', 'M', '20', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '44', 'AG']
        self.caminho_5 = ['D', '46', 'I', '9', 'B', '5', 'E', '15', 'M', '20', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '45', 'V']
        self.caminho_6 = ['D', '46', 'I', '10', 'J', '16', 'E', '15', 'M', '20', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '45', 'V']
        self.caminho_7 = ['C', '8', 'H', '6', 'F', '13', 'J', '16', 'E', '15', 'M', '20', 'Q', '32', 'Y', '33', 'Z', '41', 'AF', '42', 'AE', '45', 'V']
        self.caminho_8 = ['A', '1', 'B', '5', 'E', '15', 'M', '21', 'S', '29', 'T', '31', 'X', '36', 'AB']
        self.caminho_9 = ['B', '4', 'D', '46', 'I', '10', 'J', '17', 'N', '26', 'S', '28', 'W', '39', 'AC', '43', 'AE', '44', 'AG']
        self.caminho_10 = ['A', '2', 'H', '6', 'F', '14', 'K', '18', 'O', '23', 'S', '29', 'T', '31', 'X', '35', 'AA']
        self.caminho_11 = ['H', '6', 'F', '14', 'K', '18', 'O', '23', 'S', '28', 'W', '40', 'AD']

    def test_warshall(self):
        self.assertEqual(self.grafo_dir_1.warshall(), [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_2.warshall(), [[1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 1]])
        self.assertEqual(self.grafo_dir_3.warshall(), [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_4.warshall(), [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_5.warshall(), [[0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0]])
        self.assertEqual(self.grafo_dir_6.warshall(), [[0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_7.warshall(), [[0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1]])
        self.assertEqual(self.grafo_dir_8.warshall(), [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]])
        self.assertEqual(self.grafo_dir_9.warshall(), [[0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
        self.assertEqual(self.u.warshall(), [[0, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 0]])

    def test_dijkstra(self):
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'V', 7, 9, {'S', 'Y', 'AF', 'L', 'R'}), self.caminho_1)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AG', 10, 15, {'E', 'M', 'W', 'N', 'S'}), self.caminho_2)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AG', 8, 13, {'E', 'W', 'N', 'Y', 'K'}), self.caminho_3)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AG', 10, 15, {'M', 'R', 'AE'}), self.caminho_4)
        self.assertEqual(self.grafo_dir_10.dijkstra('D', 'V', 7, 11, {'B', 'Z', 'R', 'X', 'N', 'Q', 'E'}), self.caminho_5)
        self.assertEqual(self.grafo_dir_10.dijkstra('D', 'V', 7, 11, {'B', 'Z', 'R', 'X', 'Q', 'J'}), self.caminho_6)
        self.assertEqual(self.grafo_dir_10.dijkstra('C', 'V', 3, 10, {'H', 'G', 'B', 'E', 'Q', 'Z', 'AC', 'W', 'M', 'Y'}), self.caminho_7)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AB', 3, 7, {'B', 'C', 'E', 'M', 'P', 'S', 'W', 'AC'}), self.caminho_8)
        self.assertEqual(self.grafo_dir_10.dijkstra('B', 'AG', 12, 12, {'J', 'R', 'S', 'Y', 'U', 'W', 'AE'}), self.caminho_9)
        self.assertEqual(self.grafo_dir_10.dijkstra('B', 'AG', 11, 12, {'J', 'W', 'AC', 'R', 'N'}), self.caminho_9)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AA', 4, 10, {'F', 'E', 'M', 'Y'}), self.caminho_10)
        self.assertEqual(self.grafo_dir_10.dijkstra('H', 'AD', 6, 10, {'B', 'M', 'R', 'S'}), self.caminho_11)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'AD', 5, 7, {'W', 'F', 'R', 'M'}), False)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'A', 10, 20, {'A', 'D', 'I', 'K'}), False)
        self.assertEqual(self.grafo_dir_10.dijkstra('A', 'D', -10, 10, {'Q', 'R', 'B'}), False)
        self.assertEqual(self.grafo_dir_10.dijkstra('AD', 'AG', 10, 15, {'W', 'AC', 'AE'}), False)
